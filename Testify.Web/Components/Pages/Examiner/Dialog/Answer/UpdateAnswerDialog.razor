@using Testify.DAL.Models
@using Testify.Web.Data.Commons

<MudDialog>
    <TitleContent>
        <MudText Style="font-size: 18px; font-weight: bold; text-transform: uppercase">Cập nhật mức độ câu hỏi</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Spacing="4" Model="@answer" @ref="@form">
            <MudTextField T="string" @bind-Value="answer.Content" Style="padding: 0" Label="Tên Câu Hỏi" ReadOnly=@checkContentAnswer Variant="Variant.Outlined" />
            <MudRadioGroup T="bool" @bind-Value="@valueIsCorrect">
                <MudRadio Value="true">Đúng</MudRadio>
                <MudRadio Value="false">Sai</MudRadio>
            </MudRadioGroup>
        </MudForm>
    </DialogContent>
    <DialogActions>

        <MudButton OnClick="Cancel">Đóng</MudButton>
        <MudButton Color="Color.Warning" OnClick="Submit">Sửa</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private Answer answer { get; set; } = new();
    private Question question;

    [Parameter]
    public int answerId { get; set; }

    [Parameter]
    public int questionOfAnswerId { get; set; }

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    MudForm form;

    private bool valueIsCorrect;
    private bool checkContentAnswer = false;
    private Guid _userId;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            var userId = await ProtectedSessionStore.GetAsync<string>("userLogin");
            _userId = Guid.Parse(userId.Value);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        answer = await _serAnswer.GetById(answerId);
        question = await _serQuestion.GetQuestionById(questionOfAnswerId);
        valueIsCorrect = answer.IsCorrect;
        if (question.QuestionTypeId == Convert.ToInt32(listQuestionTypes.YesNo))
        {
            checkContentAnswer = true;
        }
    }

    private async Task<bool> CheckIscorrect()
    {
        var lstAnswerOfQuestion = await _serAnswer.GetAllByQuestionId(questionOfAnswerId);
        var lstNoCurrentAnswer = lstAnswerOfQuestion.Where(x => x.Id != answerId).ToList();

        var correct = lstNoCurrentAnswer.Count(x => x.IsCorrect);
        var isCorrect = lstNoCurrentAnswer.Count(x => !x.IsCorrect);

        if (string.IsNullOrEmpty(answer.Content) || string.IsNullOrWhiteSpace(answer.Content))
        {
            snackbar.Add("Nội dung trống", Severity.Warning);
            return true;
        }

        if (lstNoCurrentAnswer.Any(a => a.Content.Trim().ToLower().Equals(answer.Content.Trim().ToLower())))
        {
            snackbar.Add("Đã có nội dung này", Severity.Warning);
            return true;
        }

        if (question.QuestionTypeId == Convert.ToInt32(listQuestionTypes.SingleChoice) || question.QuestionTypeId == Convert.ToInt32(listQuestionTypes.YesNo))
        {
            if (valueIsCorrect == true && correct > 0)
            {
                snackbar.Add("Chỉ được 1 đáp án đúng", Severity.Warning);
                return true;
            }
            else if (valueIsCorrect == false && isCorrect == lstNoCurrentAnswer.Count)
            {
                snackbar.Add("Ít nhất 1 đáp án đúng", Severity.Warning);
                return true;
            }
        }
        else
        {
            if (valueIsCorrect == false && isCorrect == lstNoCurrentAnswer.Count)
            {
                snackbar.Add("Ít nhất 1 đáp án đúng", Severity.Warning);
                return true;
            }
        }

        return false;
    }

    private async Task Submit()
    {
        var checkIcorrect = await CheckIscorrect();

        if(!checkIcorrect)
        {
            var hasExamSchedule = await _serQuestion.CheckUpdate(answer.QuestionId);
            if (hasExamSchedule)
            {
                snackbar.Add("Không thể sửa do có bài thi đang diễn ra có câu hỏi chứa đáp án này!", Severity.Warning);
                return;
            }
            answer.IsCorrect = valueIsCorrect;
            answer.UpdatedBy = _userId;
            answer.UpdatedAt = DateTime.Now;
            var updateAnswer = await _serAnswer.Update(answer);
            if (updateAnswer != null)
            {
                MudDialog.Close(DialogResult.Ok(true));
                snackbar.Add("Cập nhật thành công", Severity.Success);
            }
            else
            {
                MudDialog.Close(DialogResult.Ok(true));
                snackbar.Add("Cập nhật thất bại", Severity.Error);
            }
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
