@using Testify.DAL.Models;
@using Testify.Web.Shared;
@using Testify.Web.Data.Commons;

<MudDialog>
    <TitleContent>
        <MudText Style="font-size: 18px; font-weight: bold; text-transform: uppercase">Thêm mới đáp án cho câu hỏi</MudText>
    </TitleContent>
    <DialogContent>
        @if (isLoading)
        {
            <LoadingContext />
        }
        else
        {
            <MudForm Spacing="5" @ref="form">
                <MudForm Model="answer" @ref="form" Spacing="4">
                    <MudTextField For="@(() => answer.Content)" Style="padding: 0" T="string" Label="Nội dung đáp án" @bind-Value="answer.Content" Variant="Variant.Outlined" />
                    <MudCheckBox T="bool" @bind-Value="@answer.IsCorrect" Label="Đáp án đúng" />
                </MudForm>
            </MudForm>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Đóng</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Thêm mới</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private Answer answer { get; set; } = new();

    private List<QuestionType> lstQuestionType = new List<QuestionType>();
    private List<Answer> lstAnswers = new List<Answer>();
    private List<Answer> lstAnswered = new List<Answer>();

    private bool isLoading { get; set; } = true;
    private int questionTypeId;

    [Parameter]
    public int questionIdParams { get; set; }
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    MudForm form;

    private async Task LoadData()
    {
        var objQuestion = await _serQuestion.GetQuestionById(questionIdParams);
        questionTypeId = objQuestion.QuestionTypeId;
        lstAnswered = await _serAnswer.GetAllByQuestionId(questionIdParams);
        isLoading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task Submit()
    {
        int answerCorrect = lstAnswered.Count(x => x.IsCorrect);

        if (lstAnswered.Any(x => x.Content.Trim().ToLower().Equals(answer.Content.Trim().ToLower())))
        {
            snackbar.Add("Đã có nội dung đáp án này", Severity.Warning);
            return;
        }

        if (questionTypeId == Convert.ToInt32(listQuestionTypes.SingleChoice))
        {
            if (answerCorrect >= 1 && answer.IsCorrect == true)
            {
                snackbar.Add("Câu hỏi này chỉ 1 đáp án đúng", Severity.Warning);
                return;
            }
        }

        answer.QuestionId = questionIdParams;
        answer.Status = 1;
        var checkAddSuccess = await _serAnswer.Create(answer);
        if (checkAddSuccess)
        {
            snackbar.Add("Thêm đáp án thành công", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            snackbar.Add("Thêm đáp án không thành công", Severity.Error);
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
