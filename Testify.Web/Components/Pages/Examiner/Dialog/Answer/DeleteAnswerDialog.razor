@using Testify.DAL.Models
@using Testify.Web.Data.Commons

<MudDialog>
    <TitleContent>
        <MudText Style="font-size: 18px; font-weight: bold; text-transform: uppercase">Xóa đáp án</MudText>
    </TitleContent>
    <DialogContent>
        <MudText>Bạn chắc chắn muốn xóa đáp án <span style="font-weight: bold">@answer?.Content</span> không?</MudText>
    </DialogContent>
    <DialogActions>

        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="Submit">Xóa</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private Answer answer { get; set; } = new();

    [Parameter]
    public int answerId { get; set; }

    MudForm form;

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {
        answer = await _serAnswer.GetById(answerId);
    }

    private async Task Submit()
    {
        var deleteAnswer = await _serAnswer.UpdateStatus(answerId, Convert.ToByte(StatusType.noAnswer));

        if(deleteAnswer != null)
        {
            var lstAnswer = await _serAnswer.GetAllByQuestionId(answer.QuestionId);
            var count = 0;
            foreach (var item in lstAnswer)
            {
                if(item.Status == Convert.ToByte(StatusType.isActive))
                {
                    count++;
                    break;
                }
            }
            if(count == 0)
            {
                await _serQuestion.UpdateStatus(answer.QuestionId, Convert.ToByte(StatusType.noAnswer));
            }
            MudDialog.Close(DialogResult.Ok(true));
            snackbar.Add("Xóa thành công!!", Severity.Success);
        }
        else
        {
            MudDialog.Close(DialogResult.Ok(true));
            snackbar.Add("Xóa thất bại!!", Severity.Error);
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
