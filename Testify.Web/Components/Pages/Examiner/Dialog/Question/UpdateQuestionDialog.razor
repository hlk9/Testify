@using Testify.DAL.Models
@using Testify.Web.Shared;

<MudDialog>
    <TitleContent>
        <MudText Style="font-size: 18px; font-weight: bold; text-transform: uppercase">Cập nhật câu hỏi</MudText>
    </TitleContent>
    <DialogContent>
        @if(isLoading)
        {
            <LoadingContext />
        }
        else
        {
            <MudForm Spacing="5" Model="@question" @ref="@form">
                <MudTextField @bind-Value="question.Content" For="@(() => question.Content)" Style="padding: 0" T="string" Label="Tên Câu Hỏi" />
                <MudTextField @bind-Value="question.DocumentURL" For="@(() => question.DocumentURL)" Style="padding: 0" T="string" Label="Link Câu Hỏi" />
                <MudSelect T="int" @bind-Value="question.QuestionLevelId" Label="Mức độ" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                    @if (_lstQuestionLevels != null)
                    {
                        @foreach (var itemLevel in _lstQuestionLevels)
                        {
                            <MudSelectItem Value="itemLevel.Id">@itemLevel.Name</MudSelectItem>
                        }
                    }

                </MudSelect>

                <MudSelect T="int" @bind-Value="question.SubjectId" Label="Môn" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">

                    @if (_lstSubjects != null)
                    {
                        @foreach (var item in _lstSubjects)
                        {
                            <MudSelectItem Value="item.Id">@item.Name</MudSelectItem>
                        }
                    }


                </MudSelect>
            </MudForm>
        }
    </DialogContent>
    <DialogActions>

        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Warning" OnClick="Submit">Cập nhật</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private Question question { get; set; } = new();
    private List<QuestionLevel> _lstQuestionLevels;
    private List<Subject> _lstSubjects;
    private bool isLoading { get; set; } = true;
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public int QuestionId { get; set; }

    MudForm form;

    private async Task LoadData()
    {
        _lstQuestionLevels = await _serQuestionLevel.GetAllQuestionLevels();

        _lstSubjects = await _serSub.GetAllSub();

        question = await _serQuestion.GetQuestionById(QuestionId);

        isLoading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task Submit()
     {
    //     question.Status = statusQuestion;
        var check = await _serQuestion.UpdateQuestion(question);
        if (check != null)
        {
            MudDialog.Close(DialogResult.Ok(true));
            snackbar.Add("Cập nhật thành công", Severity.Success);
        }
        else
        {
            MudDialog.Close(DialogResult.Ok(true));
            snackbar.Add("Cập nhật thất bại", Severity.Error);
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
