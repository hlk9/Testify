@using Testify.API.DTOs
@inject ExamService examService
@inject ExamDetailService examDetailService
@inject ExamDetailQuestionService examDetailQuestionService
<MudDialog>
    <TitleContent>
    <TitleContent>
        <MudText Style="font-size: 18px; font-weight: bold; text-transform: uppercase">Xóa bài thi</MudText>
    </TitleContent>
    </TitleContent>
    <DialogContent>
        Bạn có chắc chắn muốn xoá bài thi <span Style="font-weight: bold"> @NameLL</span> không? [<span Style="font-weight: bold">Bài thi này có @lisDThi.Count đề thi</span>]
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Surface" OnClick="Cancel">Đóng</MudButton>
        <MudButton Color="@Color.Error" OnClick="DeleteExcute">Xóa</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private List<ExamWhitQusetion> _lst = new List<ExamWhitQusetion>();
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public int Id { get; set; }
    [Inject] ISnackbar Snackbar { get; set; }
    private List<ExamDetail> lisDThi = new List<ExamDetail>();
    private void Cancel() => MudDialog.Cancel();
    private string NameLL = "";

    private async Task DeleteExcute()
    {
        lisDThi = await examDetailService.GetExamDetailByExamId(Id);
        foreach (var item in lisDThi)
        {
            //await examDetailQuestionService.DeleteExamDetailQuestionsByExamDetailId(item.Id);

            await examDetailService.DeleteExamDetail(item.Id);
        }
        bool stats = await examService.DeleteExam(Id);
        if (stats)
        {
            Snackbar.Add("Xoá thành công!", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add("Xoá thất bại", Severity.Error);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        lisDThi = (await examDetailService.GetExamDetailByExamId(Id))
            .Where(x => x.Status != 255)
            .ToList();
        _lst = await examService.GetInforBasic(null);
        var nameL = _lst.FirstOrDefault(x => x.Id == Id);
        NameLL = nameL.ExamName;
    }
}
