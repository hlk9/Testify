@using Testify.DAL.Models
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Class="mr-3 mb-n1" />
            Thêm mới tài khoản
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Spacing="3" Model="@users">
@*         <MudTextField T="Guid" @bind-Value="@users.Id" Label="Mã tài khoản" /> *@
            <MudTextField T="string" @bind-Value="@users.FullName" Label="Họ và tên" />
            <MudDatePicker @bind-Value="@users.DateOfBirth" Label="Ngày sinh"  />
            <MudTextField T="string" @bind-Value="@users.PhoneNumber" Label="Số điện thoại" />
            <MudTextField T="string" @bind-Value="@users.Address" Label="Địa chỉ"  />
      @*       <MudTextField T="int" @bind-Value="@users.LevelId" Label="Level"  /> *@
            <MudSelect T="int" @bind-Value="@users.LevelId" Label="Level">
                <MudSelectItem Value="1">Admin</MudSelectItem>
                <MudSelectItem Value="2">Khảo thí</MudSelectItem>
                <MudSelectItem Value="3">Giáo viên</MudSelectItem>
                <MudSelectItem Value="4">Sinh viên</MudSelectItem>
            </MudSelect>
            <MudTextField T="string" @bind-Value="@users.UserName" Label="Tên tài khoản"  />
            <MudTextField T="string" @bind-Value="@users.Email" Label="Email"  />
            <MudTextField T="string" @bind-Value="@users.PasswordHash" Label="PasswordHash"  />
@*             <MudTextField T="DateTime?" @bind-Value="@users.LastLogin" Label="Lần cuối đăng nhập" /> *@
            @* <MudTextField T="byte" @bind-Value="@users.Status" Label="Trạng thái" /> *@
        </MudForm>

    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Surface" Variant="@Variant.Filled" OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Primary" Variant="@Variant.Filled" OnClick="Submit">Tạo</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public Guid UserId { get; set; }
    private User users { get; set; } = new();

    private bool ValidateForm()
    {
        int count = 0;
        if(users.FullName == null || users.FullName.Trim().Length == 0)
        {
            snackbar.Add("Họ và tên không được để trống!", Severity.Error);
            count += 1;
        }
        if (users.UserName == null || users.UserName.Trim().Length == 0)
        {
            snackbar.Add("Họ và tên không được để trống!", Severity.Error);
            count += 1;
        }
        if(users.DateOfBirth == null)
        {
            snackbar.Add("Ngày sinh không được để trống!", Severity.Error);
            count += 1;
        }
        if(users.Address == null || users.Address.Trim().Length == 0)
        {
            snackbar.Add("Địa chỉ không được để trống!", Severity.Error);
            count += 1;
        }
        if(users.Email ==null|| users.Email.Trim().Length == 0)
        {
            snackbar.Add("Email không được để trống!", Severity.Error);
            count += 1;
        }
        if(users.PasswordHash == null)
        {
            snackbar.Add("Mật khẩu không được để trống!", Severity.Error);
            count += 1;
        }
        if(count > 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    private async Task Submit()
    {
        var checkValidation = ValidateForm();
        if (!checkValidation)
        {
            users.Status = 1;
            
            var check = await _serLec.CreateLecturer(users);
            if (check == true)
            {
                MudDialog.Close(DialogResult.Ok(true));
                snackbar.Add("Thêm thành công", Severity.Success);
            }
            else
            {
                MudDialog.Close(DialogResult.Ok(true));
                snackbar.Add("Thêm thất bại", Severity.Error);
            }
        }
       
    }

    private void Cancel() => MudDialog.Cancel();
}
