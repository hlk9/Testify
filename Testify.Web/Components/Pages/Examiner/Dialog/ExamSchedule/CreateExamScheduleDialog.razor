@inject ExamScheduleService scheduleService
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Tạo lịch thi mới</MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@currentSchedule" OnInvalidSubmit="SubmitValid">
            <DataAnnotationsValidator />
            <MudTextField T="string" @bind-Value="@currentSchedule.Title" For="@(() => currentSchedule.Title)" Label="Tiêu đề lịch thi này"></MudTextField>
            <MudGrid Class="mt-3 mb-3" Justify="Justify.SpaceBetween" Spacing="4">
                <MudItem Class="w-100">
                    <MudSelect Class="w-100" FullWidth="true" @bind-Value="@currentSubjectId" T="int?" Dense="true" Label="Chọn môn của lịch thi" Placeholder="Chọn môn" Variant="Variant.Outlined" AdornmentColor="Color.Primary">
                        <MudSelectItem T="int?" Value="1" Disabled="true">Pizza (Disabled)</MudSelectItem>
                        <MudSelectItem T="int?" Value="2">Burger</MudSelectItem>
                        <MudSelectItem T="int?" Value="3">Hot Dog</MudSelectItem>
                    </MudSelect>

                    <MudSelect Class="w-100" FullWidth="true" Dense="true" @bind-Value="@currentExamId" T="int?" Label="Chọn bài thi" Placeholder="Chọn" Variant="Variant.Outlined" AdornmentColor="Color.Primary">
                        <MudSelectItem T="int?" Value="1" Disabled="true">Pizza (Disabled)</MudSelectItem>
                        <MudSelectItem T="int?" Value="2">Burger</MudSelectItem>
                        <MudSelectItem T="int?" Value="3">Hot Dog</MudSelectItem>
                    </MudSelect>

                </MudItem>
                <MudItem Class="w-50">
                    <MudDatePicker Editable="true" @bind-Date="@startDate" DateFormat="dd/MM/yyyy" Label="Ngày bắt đầu" />
                    <MudTimePicker Editable="true" @bind-Time="@startTime" PickerVariant="PickerVariant.Dialog" Label="Thời gian bắt đầu" />
                </MudItem>

                <MudItem Class="w-50">
                    <MudDatePicker Editable="true" @bind-Date="@endDate" DateFormat="dd/MM/yyyy" Label="Ngày kết thúc" />
                    <MudTimePicker Editable="true" @bind-Time="@endTime" PickerVariant="PickerVariant.Dialog" Label="Thời gian kết thúc" />
                </MudItem>
            </MudGrid>


            <MudTextField T="string" @bind-Value="@currentSchedule.Description" For="@(() => currentSchedule.Description)" Label="Ghi chú"></MudTextField>
        </EditForm>


    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Đóng/Huỷ</MudButton>
        <MudButton Color="Color.Primary" OnClick="SubmitValid">Tạo</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    [Inject] ISnackbar Snackbar { get; set; }
    private ExamSchedule currentSchedule = new ExamSchedule();
    private int? currentSubjectId;
    private int? currentExamId;
    private DateTime? startDate;
    private DateTime? endDate;
    private TimeSpan? startTime;
    private TimeSpan? endTime;


    private async void SubmitValid()
    {
        currentExamId = 2;
        currentSubjectId = 1;
        if (currentExamId == null || currentSubjectId == null || startDate == null || startTime == null || endDate == null || endTime == null)
        {
            Snackbar.Add("Thất bại, Vui lòng kiểm tra lại thông tin", Severity.Error);
            return;
        }
        else
        {
            currentSchedule.RoomId = null;
            currentSchedule.SubjectId = currentSubjectId;
            currentSchedule.ExamId = (int)currentExamId;
            currentSchedule.StartTime = startDate.Value.Date.Add(startTime.Value);
            currentSchedule.EndTime = endDate.Value.Date.Add(endTime.Value);
            currentSchedule.Status = 1;
            bool stats = await scheduleService.Create(currentSchedule);
            if(stats ==true)
            {
                Snackbar.Add("Tạo lịch thi mới thành công", Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
                StateHasChanged();
            }
            else
            {
                Snackbar.Add("Thất bại, Vui lòng kiểm tra lại thông tin", Severity.Error);
            }              
            
            

        }
    }

  

    private void Cancel() => MudDialog.Cancel();
}