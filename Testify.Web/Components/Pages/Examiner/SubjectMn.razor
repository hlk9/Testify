 @page "/Examiner/SubjectManagement"
@using Testify.DAL.Models
@using Testify.Web.Data.Commons
@layout AdminLayout
@inject IDialogService DialogService
<style>

    .add-button-end {
        background-color: #29A69A;
        color: white;
        width: 100%;
    }

        .add-button-end:hover {
            background-color: white;
            color: #29a69a;
        }

</style>
<div style="font-family:Roboto; padding:30px; height:calc(100vh-(100vh-64px)); background-color:#fafafa">
    <MudPaper Style="padding:15px;">
        <MudText Class="fw-bold" Style="font-size:22px; color:#29A69A">MÔN HỌC</MudText>
    </MudPaper>
    <MudGrid Style="padding:20px 0 ">
        <MudItem xl="10" lg="9" md="8" sm="7" xs="12">

        </MudItem>
        <MudItem xl="2" lg="3" md="4" sm="5" xs="12">
            <MudButton OnClick="@(() => OpenDialogAsync(_maxWidth,OpenDialogType.Create ,-1))" Class="add-button-end" Variant="Variant.Filled">Thêm mới</MudButton>
        </MudItem>
    </MudGrid>

    <div class="bg-white rounded-3 mb-4" style="width:100%; margin-top:10px;">
        @if(isLoading)
        {
            <Testify.Web.Shared.LoadingContext />
        }
        else
        {
            <MudTable Items="@subject" Dense="true" Hover="true" Virtualize="true" FixedHeader="true" HorizontalScrollbar="true" Height="500px">

                <ToolBarContent>
                    <MudGrid Style="align-items:center;padding:0px; margin:0;width:100%">
                        <MudItem xl="6" lg="6" md="6" sm="4" xs="12" Style="padding:0px; margin:0;">
                            <MudText Style="font-size: 22px; font-weight: bold;color:#29a69a">Danh sách môn học</MudText>

                        </MudItem>
                        <MudItem xl="6" lg="6" md="6" sm="8" xs="12" Style="padding:0px; margin:0;">
                            <MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start"
                                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </MudItem>
                    </MudGrid>

                </ToolBarContent>
                <HeaderContent>
                    <MudTh><MudTableSortLabel SortLabel="Mã môn học" T="string">Mã môn học</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="Tên môn học" T="string">Tên môn học</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="Mô tả" T="string">Mô tả</MudTableSortLabel></MudTh>
                    @* <MudTh><MudTableSortLabel SortLabel="Trạng thái" T="string">Trạng thái</MudTableSortLabel></MudTh> *@
                    <MudTh Style="text-align:center"><MudTableSortLabel SortLabel="Thao tác" T="string">Thao tác</MudTableSortLabel></MudTh>
                </HeaderContent>

                <RowTemplate>

                    <MudTd DataLabel="Mã môn học">@context.Id</MudTd>
                    <MudTd DataLabel="Tên môn học">@context.Name</MudTd>
                    <MudTd  DataLabel="Mô tả">@context.Description</MudTd>
                    @*  <MudTd DataLabel="Trạng thái">@context.Status</MudTd> *@
                    <MudTd Style="text-align:center" DataLabel="Thao tác">
                       <MudFab OnClick="@(()=> OpenDialogAsync(_maxWidth,OpenDialogType.Update,context.Id))" Color="Color.Warning" StartIcon="@Icons.Material.Filled.Edit" />
                        <MudFab OnClick="@(()=> OpenDialogAsync(_maxWidth,OpenDialogType.Detail,context.Id))" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Notes" />
                        <MudFab OnClick="@(()=> OpenDialogAsync(_maxWidth,OpenDialogType.Delete,context.Id))" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" />
                      

                    </MudTd>

                </RowTemplate>
                <NoRecordsContent>
                    <MudText>No matching records found</MudText>
                </NoRecordsContent>
                <LoadingContent>
                    <MudText>Loading...</MudText>
                </LoadingContent>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        } 

    </div>



</div>
@code {
    private List<Subject> subject = new();
    private bool isLoading = true;

    private async Task LoadData()
    {
        subject = await _serSub.GetAllSub();
        isLoading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    [Parameter]
    public int idSubject { get; set; }

    private readonly DialogOptions _maxWidth = new() { MaxWidth = MaxWidth.Small, FullWidth = true };

    private async Task OpenDialogAsync(DialogOptions options, string name, int id)
    {
        var dialogParametersUpdate = new DialogParameters<Dialog.Subject.UpdateSubjectDialog>
        {
            {x => x.idSubject, id}
        };

        var dialogParametersDel = new DialogParameters<Dialog.Subject.DeleteSubjectDialog>
        {
            {x => x.idSubject, id}
        };

        var dialogParametersQuestionId = new DialogParameters<Dialog.Subject.DetailsSubjectDialog>
        {
            {x => x.idSubject, id}
        };


        if (name.Equals(OpenDialogType.Create))
        {
            var dialog = await DialogService.ShowAsync<Dialog.Subject.CreateSubjectDialog>("Options Dialog", options);
            var result = await dialog.Result;

        }
        else if (name.Equals(OpenDialogType.Update))
        {
            var dialog = await DialogService.ShowAsync<Dialog.Subject.UpdateSubjectDialog>("Options Dialog", dialogParametersUpdate, options);
            var result = await dialog.Result;

        }
        else if (name.Equals(OpenDialogType.Detail))
        {
            var dialog = await DialogService.ShowAsync<Dialog.Subject.DetailsSubjectDialog>("Options Dialog", dialogParametersQuestionId, options);
            var result = await dialog.Result;
        }
        else
        {
            var dialog = await DialogService.ShowAsync<Dialog.Subject.DeleteSubjectDialog>("Options Dialog", dialogParametersDel, options);
            var result = await dialog.Result;

        }
    }
}
