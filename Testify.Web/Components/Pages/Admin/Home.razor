@page "/Admin/Home"
@layout AdminLayout

@using Microsoft.EntityFrameworkCore
@using Testify.DAL.ViewModels
@using Testify.Web.Components.Pages.Examiner.Component

@if (isLoading)
{
    <MudPaper Elevation="0" Style="width: 100%;height: calc(100svh - 64px); display: flex; justify-content: center; align-items: center; background-color: transparent">
        <Testify.Web.Shared.LoadingContext />
    </MudPaper>
}
else
{
    <div style="padding:30px; background-color: #fafafa; height: calc(100svh - 64px)">

        <MudPaper Style="padding:15px;">
            <MudText Class="fw-bold" Style="font-size:22px;color: #29A69A">TỔNG QUAN</MudText>
        </MudPaper>

        <MudGrid Style="margin-top: 2rem">
            <MudItem xl="4" xs="12" sm="6" md="6" lg="4" Style="padding: 10px 0 0 24px">
                <MudPaper Elevation="2" Style="width: 100% ;min-height: 10rem; padding: 1rem; border-radius: 1.5rem; display: flex; justify-content: start; align-items: center; gap: 1rem">
                    <MudPaper Elevation="0" Style="width: 5rem; height: 5rem; background-color: #ffa940; border-radius: 50%; display: flex; justify-content: center; align-items: center">
                        <svg fill="#ffffff" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                             width="50px" height="50px" viewBox="0 0 31.572 31.572"
                             xml:space="preserve">
    <g>
                        <path d="M29.905,20.212c0-0.373-0.211-0.688-0.513-0.864V14.8l2.18-1.065L15.786,6.021L0,13.735l7.087,3.463v5.43
		c0,0,3.175,2.923,8.814,2.923c5.638,0,8.583-2.923,8.583-2.923v-5.43l3.895-1.904v4.053c-0.301,0.177-0.513,0.491-0.513,0.864
		c0,0.332,0.168,0.611,0.413,0.798l-0.576,3.168h2.365l-0.576-3.168C29.737,20.824,29.905,20.544,29.905,20.212z" />
    </g>
    </svg>
                    </MudPaper>
                    <MudPaper Elevation="0">
                        <MudText Style="font-size: 1.5rem; font-weight: 600">@totalStudent</MudText>
                        <MudText Class="font-size: 1.2rem; font-weight: 400">Tổng số học sinh</MudText>
                    </MudPaper>
                </MudPaper>
            </MudItem>

            <MudItem xl="4" xs="12" sm="6" md="6" lg="4" Style="padding: 10px 0 0 24px">
                <MudPaper Elevation="2" Style="width: 100% ;min-height: 10rem; padding: 1rem; border-radius: 1.5rem; display: flex; justify-content: start; align-items: center; gap: 1rem">
                    <MudPaper Elevation="0" Style="width: 5rem; height: 5rem; background-color: #c49c6b; border-radius: 50%; display: flex; justify-content: center; align-items: center">
                        <svg fill="#ffffff" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                             width="50px" height="50px" viewBox="0 0 190.163 190.163"
                             xml:space="preserve">
    <g>
                        <g>
                        <path d="M152.109,14.012c-3.008-5.155-8.031-7.684-13.147-7.489c-7.559-2.172-14.561,2.503-17.28,9.724
			c-3.1,8.234-0.31,16.185,6.51,21.44c6.491,5.003,15.41,2.816,21.013-2.286C155.293,29.856,156.144,20.93,152.109,14.012z" />
                        <path d="M176.196,89.213c-2.278-0.292-4.648-0.119-7.032,0.174c1.918-6.882,0.66-19.186,0.55-22.173
			c-0.462-12.635-6.606-23.332-19.97-24.576c-12.796-1.192-29.757-0.149-38.333,10.857c-7.351,9.432-5.916,24.611-2.827,35.546
			c-4.226-0.03-8.445,0.06-12.642,0.399c-2.976,0.24-2.953,4.333,0,4.604c4.282,0.393,8.58,0.721,12.884,1.02
			c-0.706,6.528-0.976,12.912,0.226,19.402c0.242,1.311,1.581,2.042,2.789,2.123c16.176,1.09,32.332-3.886,48.385-0.646
			c1.483,0.299,3.594-0.411,3.83-2.175c0.536-3.986,2.434-12.704,0.139-17.107c4.566-0.15,9.612-0.511,13.276-2.738
			C179.805,92.504,178.562,89.519,176.196,89.213z M116.028,89.228c-0.168-7.004,0.097-13.872,3.103-20.17
			c0.129,0.024,0.259,0.041,0.389,0.063c-0.027,1.225-0.037,2.438-0.09,3.595c-0.248,5.514,0.031,11.152,0.425,16.687
			C118.579,89.343,117.304,89.274,116.028,89.228z M158.129,89.946c-0.033,0.19-0.101,0.374-0.177,0.551
			c-2.049,0.067-4.102,0.083-6.153,0.079c-0.099-3.649-0.26-7.297-0.355-10.947c-0.088-3.298,0.568-6.841,0.785-10.23
			c0.79-0.038,1.59-0.088,2.375-0.119c0.783,1.989,1.444,3.984,1.985,5.871c0.988,3.444,1.532,7,1.726,10.572
			C158.391,87.121,158.368,88.563,158.129,89.946z" />
                        <path d="M104.33,41.885c-0.947-6.589-6.351-12.682-12.937-12.372C89.085,5.404,61.897-2.635,41.128,0.73
			C20.986,3.994-1.263,21.931,9.247,44.646c8.381,18.114,33.359,20.274,50.649,18.186c10.096-1.219,32.133-6.819,29.819-20.298
			c0.871,0.206,1.756,0.336,2.474,0.503c3.034,0.704,6.094,1.309,9.166,1.823C103.303,45.186,104.604,43.795,104.33,41.885z
			 M78.985,47.176c0.443-0.352,0.891-0.688,1.323-1.07c0.073-0.032,0.145-0.064,0.218-0.095c-0.439,0.792-1.012,1.491-1.693,2.103
			C78.919,47.784,78.97,47.471,78.985,47.176z" />
                        <path d="M34.012,157.514c2.51-0.64,4.85-1.932,6.775-4.04c4.439-4.866,5.113-12.572,2.857-18.55
			c-1.559-4.133-4.128-6.773-7.119-8.176c-0.137-0.654-0.57-1.215-1.377-1.354c-8.726-1.499-17.223,1.796-21.803,9.551
			c-4.599,7.788-0.738,16.023,6.544,20.209c1.211,0.696,2.494,1.278,3.813,1.733c-9.771,3.25-14.948,17.715-13.774,27.314
			c-3.381,0.721-3.256,6.235,0.459,5.95c11.625-0.893,23.285-0.867,34.855-2.441c1.196-0.163,2.274-1.679,2.166-2.846
			C46.501,174.997,43.66,161.653,34.012,157.514z M39.094,182.452c0.02-0.073,0.044-0.145,0.058-0.219
			c0.795-0.013,1.489-0.374,1.972-0.926c0.042,0.324,0.087,0.655,0.123,0.965C40.53,182.346,39.811,182.387,39.094,182.452z" />
                        <path d="M77.696,157.648c5.798-1.723,10.68-6.46,12.794-12.029c3.015-7.941-2.229-19.157-11.127-20.003
			c-1.589-0.151-3.139-0.021-4.628,0.311c-8.387,0.568-17.018,6.013-17.716,15.054c-0.607,7.855,4.322,14.612,11.437,16.696
			c-8.942,3.841-14.732,19.428-10.82,27.447c-0.232,1.578,0.948,3.382,2.721,3.265c4.73-0.312,9.142-1.136,13.979-0.978
			c4.986,0.162,9.892,0.379,14.84-0.379c1.224-0.188,2.341-1.708,2.225-2.922C90.489,174.612,87.382,161.088,77.696,157.648z" />
                        <path d="M125.501,157.448c5.527-2.114,9.175-9.11,9.588-15.735c0.302-4.842-1.138-10.26-4.892-13.534
			c-4.528-3.948-11.776-3.452-16.378,0.059c-2.29,1.747-3.843,4.167-4.654,6.822c-0.362,0.648-0.7,1.315-0.991,2.011
			c-3.203,7.646,0.718,14.797,7.234,18.892c0.248,0.156,0.493,0.293,0.737,0.431c-11.74,2.135-14.48,19.429-12.328,29.014
			c0.267,1.188,1.395,1.592,2.388,1.385c0.08,0.163,0.176,0.317,0.299,0.449c1.682,2.259,7.089,1.053,9.1,0.913
			c6.051-0.419,12.126-0.915,18.192-1.002c1.548-0.022,3.192-1.373,3.045-3.045C136.001,174.543,134.281,161.597,125.501,157.448z
			 M128.664,136.908c0.198,0.734,0.284,1.459,0.28,2.166c-0.392-1.771-1.091-3.437-2.018-4.688
			C127.718,134.867,128.33,135.669,128.664,136.908z" />
                        <path d="M172.504,159.617c-0.237-0.156-0.475-0.28-0.713-0.418c7.56-2.467,11.642-12.548,10.325-20.711
			c-0.863-5.343-3.899-9.963-9.188-11.684c-6.979-2.27-15.247,2.228-18.563,8.303c-0.955,1.75-1.482,3.597-1.66,5.446
			c-2.898,7.848,1.979,14.36,8.854,17.55c-9.75,3.294-16.758,17.915-11.032,27.007c0.079,1.425,1.054,2.78,2.955,2.83
			c8.63,0.225,20.958,4.104,27.485-3.584C187.958,176.122,179.669,164.337,172.504,159.617z" />
        </g>
    </g>
    </svg>
                    </MudPaper>
                    <MudPaper Elevation="0">
                        <MudText Style="font-size: 1.5rem; font-weight: 600">@totalClass</MudText>
                        <MudText Class="font-size: 1.2rem; font-weight: 400">Tổng số lớp học</MudText>
                    </MudPaper>
                </MudPaper>
            </MudItem>

            <MudItem xl="4" xs="12" sm="6" md="6" lg="4" Style="padding: 10px 0 0 24px">
                <MudPaper Elevation="2" Style="width: 100% ;min-height: 10rem; padding: 1rem; border-radius: 1.5rem; display: flex; justify-content: start; align-items: center; gap: 1rem">
                    <MudPaper Elevation="0" Style="width: 5rem; height: 5rem; background-color: #26bf94; border-radius: 50%; display: flex; justify-content: center; align-items: center">
                        <svg width="50px" height="50px" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M10 29V26H13V29H10Z" fill="#ffffff" />
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M32 44H8C5.79086 44 4 42.2091 4 40V8C4 5.79086 5.79086 4 8 4H32C34.2091 4 36 5.79086 36 8V40C36 42.2091 34.2091 44 32 44ZM18 13C18 12.4477 18.4477 12 19 12H31C31.5523 12 32 12.4477 32 13C32 13.5523 31.5523 14 31 14H19C18.4477 14 18 13.5523 18 13ZM19 16C18.4477 16 18 16.4477 18 17C18 17.5523 18.4477 18 19 18H31C31.5523 18 32 17.5523 32 17C32 16.4477 31.5523 16 31 16H19ZM15.7071 12.2929C16.0976 12.6834 16.0976 13.3166 15.7071 13.7071L11 18.4142L8.29289 15.7071C7.90237 15.3166 7.90237 14.6834 8.29289 14.2929C8.68342 13.9024 9.31658 13.9024 9.70711 14.2929L11 15.5858L14.2929 12.2929C14.6834 11.9024 15.3166 11.9024 15.7071 12.2929ZM19 24C18.4477 24 18 24.4477 18 25C18 25.5523 18.4477 26 19 26H31C31.5523 26 32 25.5523 32 25C32 24.4477 31.5523 24 31 24H19ZM18 29C18 28.4477 18.4477 28 19 28H31C31.5523 28 32 28.4477 32 29C32 29.5523 31.5523 30 31 30H19C18.4477 30 18 29.5523 18 29ZM14 24H9C8.44772 24 8 24.4477 8 25V30C8 30.5523 8.44772 31 9 31H14C14.5523 31 15 30.5523 15 30V25C15 24.4477 14.5523 24 14 24Z" fill="#ffffff" />
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M44 40L41 44L38 40V22H44V40Z" fill="#ffffff" />
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M40 15H42C43.1046 15 44 15.8954 44 17V21H38V17C38 15.8954 38.8954 15 40 15Z" fill="#ffffff" />
                        </svg>
                    </MudPaper>
                    <MudPaper Elevation="0">
                        <MudText Style="font-size: 1.5rem; font-weight: 600">@totalExam</MudText>
                        <MudText Class="font-size: 1.2rem; font-weight: 400">Tổng số bài thi</MudText>
                    </MudPaper>
                </MudPaper>
            </MudItem>

            <MudItem xl="4" xs="12" sm="6" md="6" lg="4" Style="padding: 10px 0 0 24px">
                <MudPaper Elevation="2" Style="width: 100% ;min-height: 10rem; padding: 1rem; border-radius: 1.5rem; display: flex; justify-content: start; align-items: center; gap: 1rem">
                    <MudPaper Elevation="0" Style="width: 5rem; height: 5rem; background-color: #ff4d4f; border-radius: 50%; display: flex; justify-content: center; align-items: center">
                        <svg fill="#ffffff" width="50px" height="50px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24"><path d="M19,4h-1V3c0-0.6-0.4-1-1-1s-1,0.4-1,1v1H8V3c0-0.6-0.4-1-1-1S6,2.4,6,3v1H5C3.3,4,2,5.3,2,7v1h20V7C22,5.3,20.7,4,19,4z M2,19c0,1.7,1.3,3,3,3h14c1.7,0,3-1.3,3-3v-9H2V19z M17,12c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S16.4,12,17,12z M17,16c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S16.4,16,17,16z M12,12c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S11.4,12,12,12z M12,16c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S11.4,16,12,16z M7,12c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S6.4,12,7,12z M7,16c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S6.4,16,7,16z" /></svg>
                    </MudPaper>
                    <MudPaper Elevation="0">
                        <MudText Style="font-size: 1.5rem; font-weight: 600">@totalSchdule</MudText>
                        <MudText Class="font-size: 1.2rem; font-weight: 400">Tổng số lịch thi</MudText>
                    </MudPaper>
                </MudPaper>
            </MudItem>

            <MudItem xl="4" xs="12" sm="6" md="6" lg="4" Style="padding: 10px 0 0 24px">
                <MudPaper Elevation="2" Style="width: 100% ;min-height: 10rem; padding: 1rem; border-radius: 1.5rem; display: flex; justify-content: start; align-items: center; gap: 1rem">
                    <MudPaper Elevation="0" Style="width: 5rem; height: 5rem; background-color: #e791bc; border-radius: 50%; display: flex; justify-content: center; align-items: center">
                        <svg fill="#ffffff" width="50px" height="50px" viewBox="0 0 1920 1920" xmlns="http://www.w3.org/2000/svg">
                            <path d="M960 1242.342c62.23 0 112.941 50.71 112.941 112.94 0 62.231-50.71 112.942-112.941 112.942-62.23 0-112.941-50.71-112.941-112.941 0-62.23 50.71-112.941 112.941-112.941Zm89.336-892.01c114.862 29.704 208.264 123.106 237.968 237.967 23.378 90.466 10.729 183.304-35.464 261.46-45.515 77.138-121.186 133.947-207.586 156.084-13.779 3.614-27.783 14.795-27.783 31.962v91.595H903.529v-91.595c0-66.183 46.306-124.235 112.716-141.29 57.6-14.795 107.971-52.743 138.353-104.131 30.833-52.292 39.19-114.635 23.378-175.85-19.651-75.67-81.204-137.223-156.875-156.875-70.927-18.183-143.435-3.953-199.341 39.304-55.68 43.143-87.642 108.31-87.642 178.673H621.176c0-105.6 47.888-203.294 131.464-268.01 83.69-64.828 191.774-86.287 296.696-59.294ZM960-.01c-529.355 0-960 430.644-960 960 0 529.355 430.645 960 960 960 529.468 0 960-430.645 960-960 0-529.356-430.532-960-960-960" fill-rule="evenodd" />
                        </svg>
                    </MudPaper>
                    <MudPaper Elevation="0">
                        <MudText Style="font-size: 1.5rem; font-weight: 600">@totalQuestion</MudText>
                        <MudText Class="font-size: 1.2rem; font-weight: 400">Tổng số câu hỏi</MudText>
                    </MudPaper>
                </MudPaper>
            </MudItem>

            <MudItem xl="4" xs="12" sm="6" md="6" lg="4" Style="padding: 10px 0 0 24px">
                <MudPaper Elevation="2" Style="width: 100% ;min-height: 10rem; padding: 1rem; border-radius: 1.5rem; display: flex; justify-content: start; align-items: center; gap: 1rem">
                    <MudPaper Elevation="0" Style="width: 5rem; height: 5rem; background-color: #b0dbff; border-radius: 50%; display: flex; justify-content: center; align-items: center">
                        <svg fill="#ffffff" width="50px" height="50px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13,16H3a1,1,0,0,0,0,2H13a1,1,0,0,0,0-2ZM3,8H21a1,1,0,0,0,0-2H3A1,1,0,0,0,3,8Zm18,3H3a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Z" /></svg>
                    </MudPaper>
                    <MudPaper Elevation="0">
                        <MudText Style="font-size: 1.5rem; font-weight: 600">@totalSubject</MudText>
                        <MudText Class="font-size: 1.2rem; font-weight: 400">Tổng số môn học</MudText>
                    </MudPaper>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </div>
}

@code {

    private List<User> _lstUser { get; set; }
    private List<Subject> _lstSubject = new List<Subject>();
    private List<Exam> _lstExam = new List<Exam>();
    private List<ClassWithUser> _lstClass;
    private int subjectId;
    private int examId;
    private ClassWithUser classId;
    private bool isError = false;
    private List<ScoreStatistics> _lstScore = new List<ScoreStatistics>();
    private string text;


    private List<ClassesWithLecturer> _lstScore2 = new List<ClassesWithLecturer>();
    private List<Class> ClassList { get; set; }

    private Guid teacherId;
    private int ClassId;

    private List<ClassWithUser> _lstClasses { get; set; }


    private List<User> _lstSV = new List<User>();

    //Carousel
    private bool autocycle = false;
    private bool arrows = true;
    private Transition transition = Transition.Slide;
    private bool bullets = false;
    private bool enableSwipeGesture = true;



    private string[] _arrScore;
    private List<double> _lstDataBarCharts = new List<double>();
    private List<double> _lstDataDonutCharts = new List<double>();
    private string[] LabelDonutCharts = { "Phần trăm đạt", "Phần trăm trượt" };


    public List<ChartSeries> Series;
    public ChartOptions ChartOption { get; set; } = new ChartOptions();

    private int select = -1;
    private bool isLoading = false;
    private int totalStudent = 0;
    private int totalExam = 0;
    private int totalSchdule = 0;
    private int totalQuestion = 0;
    private int totalSubject = 0;
    private int totalClass = 0;

    private int indexChooseDonut = 0;
    private int indexChooseBar = -1;

    private async Task LoadDataChart()
    {
        _lstDataBarCharts.Clear();
        _lstDataDonutCharts.Clear();

        _arrScore = _lstScore.Select(x => x.Score.ToString()).OrderBy(x => x).Distinct().ToArray();

        double isPass = _lstScore.Count(x => x.Score >= 5);
        double isFail = _lstScore.Count(x => x.Score < 5);
        double percenIsPass = (isPass / _lstScore.Count) * 100;
        double percenIsFail = ((_lstScore.Count - isPass) / _lstScore.Count) * 100;


        _lstDataDonutCharts.Add(percenIsPass);
        _lstDataDonutCharts.Add(percenIsFail);

        foreach (var score in _arrScore)
        {
            int count = 0;
            foreach (var item in _lstScore)
            {
                if (score == item.Score.ToString())
                {
                    count++;
                }
            }

            _lstDataBarCharts.Add(count);
        }

        //Score2
        _arrScore = _lstScore2.Select(x => x.Score.ToString()).OrderBy(x => x).Distinct().ToArray();

        double isPass2 = _lstScore2.Count(x => x.Score >= 5);
        double isFail2 = _lstScore2.Count(x => x.Score < 5);
        double percenIsPass2 = (isPass2 / _lstScore2.Count) * 100;
        double percenIsFail2 = ((_lstScore2.Count - isPass2) / _lstScore2.Count) * 100;


        _lstDataDonutCharts.Add(percenIsPass2);
        _lstDataDonutCharts.Add(percenIsFail2);

        foreach (var score in _arrScore)
        {
            int count2 = 0;
            foreach (var item in _lstScore2)
            {
                if (score == item.Score.ToString())
                {
                    count2++;
                }
            }

            _lstDataBarCharts.Add(count2);
        }

        Series = new List<ChartSeries>()
        {
            new ChartSeries() {Name = "Tổng số bài thi đạt điểm tương ứng", Data = _lstDataBarCharts.ToArray() },
        };

        ChartOption = new ChartOptions()
            {
                YAxisTicks = 1
            };

        isLoading = false;
    }

    private async Task ChangeValueSubject()
    {

        _lstExam = await _serExam.GetListOfSubject(subjectId);
        if (_lstExam != null && _lstExam.Count > 0)
        {
            examId = _lstExam[0].Id;
            _lstScore = await _serLec.GetScore(subjectId, examId);
            await LoadDataChart();
            isError = false;
        }
        else
        {
            isError = true;
        }
    }

    private async Task ChangeValueLecturer()
    {
        ClassList = await _serLec.GetListOfTeacher(teacherId);
        if (ClassList != null && ClassList.Count > 0)
        {
            ClassId = ClassList[0].Id;
            _lstScore2 = await _serLec.GetScore2(teacherId, ClassId);
            await LoadDataChart();
            isError = false;
        }
        else
        {
            isError = true;
        }
    }

    private async Task ChangeValueClass()
    {
        _lstScore2 = await _serLec.GetScore2(teacherId, ClassId);
        await LoadDataChart();

    }

    private async Task ChangeValueExam()
    {
        _lstScore = await _serLec.GetScore(subjectId, examId);
        await LoadDataChart();

    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                isLoading = true;
                StateHasChanged();

                var userId = await ProtectedSessionStore.GetAsync<string>("userLogin");
                var id = Guid.Parse(userId.Value);


                _lstSV = await _serLec.GetAllStudent();
                _lstExam = await _serExam.GetAllActive();

                totalClass = await _serClass.GetCountClassByUserId(id);
                totalSubject = await _serSub.GetCountByUserId(id);
                totalSchdule = await _serExamSche.GetCountByUserId(id);
                totalQuestion = await _serQuestion.GetCountByUserId(id);
                totalExam = _lstExam.Count();
                totalStudent = _lstSV.Count();
            }
            catch {}
            finally
            {
                isLoading = false;
                StateHasChanged();
            }
        }
    }

    Margin _margin;
    bool _placeholder;
    bool _clearable = true;

    private async Task<IEnumerable<Exam>> SearchExam(string value, CancellationToken token)
    {
        if (string.IsNullOrEmpty(value))
            return _lstExam;

        return _lstExam.Where(x => x.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }


    private async Task<IEnumerable<ClassWithUser>> SearchClass(string value, CancellationToken token)
    {
        if (string.IsNullOrEmpty(value))
            return _lstClass;

        return _lstClass.Where(x => x.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    private async Task<IEnumerable<Subject>> SearchSubject(string value, CancellationToken token)
    {
        if (string.IsNullOrEmpty(value))
            return _lstSubject;

        return _lstSubject.Where(x => x.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

}
