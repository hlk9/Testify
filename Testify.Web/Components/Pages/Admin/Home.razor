@page "/Admin/Home"
@layout AdminLayout

@using Testify.DAL.ViewModels
@using Testify.Web.Components.Pages.Examiner.Component

<div style="padding:20px; background-color: #fafafa; height: 100%">
    <MudText Style="font-size: 22px; font-weight: bolder;">Tổng quan</MudText>
    <MudGrid Style="margin-top: 2rem">
        <MudItem xl="3" xs="12" sm="6" md="6" lg="3" Style="padding: 10px 0 0 24px">
            <MudPaper Style="background-color: #E7E6FB; padding: 20px; box-shadow: none">
                <MudGrid>
                    <MudItem xs="3">
                        <MudPaper Style="background-color: #6151FB; box-shadow: none; padding: 10px; display: flex; justify-content: center; align-items: center">
                            <svg width="35" height="35" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g clip-path="url(#clip0_158_284)">
                                    <path d="M39.5185 14.0947L21.8176 5.94672C21.2434 5.68227 20.6319 5.54883 20 5.54883C19.3681 5.54883 18.7567 5.68227 18.1824 5.94672L0.481484 14.0947C0.188906 14.2299 0 14.5247 0 14.8468C0 15.1689 0.188906 15.4637 0.481484 15.5989L18.1824 23.7469C18.7566 24.0113 19.3681 24.1454 20 24.1454C20.6319 24.1454 21.2434 24.0113 21.8177 23.7469L35.7874 17.3167V23.7918C35.2331 23.8543 34.8007 24.3262 34.8007 24.8963C34.8007 25.3931 35.1295 25.8232 35.598 25.9602L34.6534 32.1939H39.0031L38.0585 25.9602C38.527 25.8232 38.8557 25.3931 38.8557 24.8963C38.8557 24.3262 38.4234 23.8543 37.869 23.7918V16.3584L39.5187 15.5989C39.8112 15.4637 40.0002 15.1689 40.0002 14.8468C40.0002 14.5247 39.8111 14.2299 39.5185 14.0947Z" fill="white" />
                                    <path d="M20.0005 27.0954C19.122 27.0954 18.2706 26.9086 17.4704 26.5404L8.8125 22.5547V30.4952C8.8125 32.2384 14.0802 34.4499 20.0005 34.4499C25.921 34.4499 31.1888 32.2384 31.1888 30.4952V22.5547L22.5304 26.5404C21.7306 26.9086 20.8795 27.0954 20.0005 27.0954Z" fill="white" />
                                </g>
                                <defs>
                                    <clipPath id="clip0_158_284">
                                        <rect width="40" height="40" fill="white" />
                                    </clipPath>
                                </defs>
                            </svg>
                        </MudPaper>
                    </MudItem>

                    <MudItem xs="9" Style="text-align:  center">
                        <MudText Style="font-size: 18px; font-weight: bold">Tổng số học sinh</MudText>
                        <MudText Style="font-size: 20px; font-weight: bold">@totalStudent</MudText>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>

        <MudItem xl="3" xs="12" sm="6" md="6" lg="3" Style="padding: 10px 0 0 24px">
            <MudPaper Style="background-color: #F9E5EA; padding: 20px; box-shadow: none">
                <MudGrid>
                    <MudItem xs="3">
                        <MudPaper Style="background-color: #EF2B58; box-shadow: none; padding: 10px; display: flex; justify-content: center; align-items: center">
                            <svg width="35" height="35" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g clip-path="url(#clip0_158_353)">
                                    <path d="M5.2005 29.6256C7.20971 29.6256 8.8385 27.9968 8.8385 25.9876C8.8385 23.9784 7.20971 22.3496 5.2005 22.3496C3.19129 22.3496 1.5625 23.9784 1.5625 25.9876C1.5625 27.9968 3.19129 29.6256 5.2005 29.6256Z" fill="white" />
                                    <path d="M15.7669 29.6256C17.7761 29.6256 19.4049 27.9968 19.4049 25.9876C19.4049 23.9784 17.7761 22.3496 15.7669 22.3496C13.7577 22.3496 12.1289 23.9784 12.1289 25.9876C12.1289 27.9968 13.7577 29.6256 15.7669 29.6256Z" fill="white" />
                                    <path d="M26.1575 29.6256C28.1667 29.6256 29.7955 27.9968 29.7955 25.9876C29.7955 23.9784 28.1667 22.3496 26.1575 22.3496C24.1483 22.3496 22.5195 23.9784 22.5195 25.9876C22.5195 27.9968 24.1483 29.6256 26.1575 29.6256Z" fill="white" />
                                    <path d="M25.0229 18.292H24.2539V19.862H25.0229V18.292Z" fill="white" />
                                    <path d="M0 1.75391V19.8609H22.064V18.2909V17.7769V17.0819H21.871L21.584 11.4929H16.328V9.98691H21.507H22.283H23.549L24.714 11.3389L25.842 9.98691L28.317 10.3119L28.477 15.9409H27.427L27.37 17.0819H27.21V17.7769V18.2909V19.8609H31.381V1.75391H0ZM24.661 9.52691C22.973 9.52691 21.603 8.15791 21.603 6.46991C21.603 4.78191 22.972 3.41291 24.661 3.41291C26.35 3.41291 27.718 4.78191 27.718 6.46991C27.718 8.15791 26.348 9.52691 24.661 9.52691Z" fill="white" />
                                </g>
                                <defs>
                                    <clipPath id="clip0_158_353">
                                        <rect width="31.381" height="31.381" fill="white" />
                                    </clipPath>
                                </defs>
                            </svg>
                        </MudPaper>
                    </MudItem>

                    <MudItem xs="9" Style="text-align:  center">
                        <MudText Style="font-size: 18px; font-weight: bold">Tổng số lớp học</MudText>
                        <MudText Style="font-size: 20px; font-weight: bold">12</MudText>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>

        <MudItem xl="3" xs="12" sm="6" md="6" lg="3" Style="padding: 10px 0 0 24px">
            <MudPaper Style="background-color: #DFEDF7; padding: 20px; box-shadow: none">
                <MudGrid>
                    <MudItem xs="3">
                        <MudPaper Style="background-color: #1B8BE3; box-shadow: none; padding: 10px; display: flex; justify-content: center; align-items: center">
                            <svg fill="#ffffff" height="35px" width="35px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path d="M510.239,76.011L476.848,9.228C474.022,3.571,468.24,0,461.913,0s-12.109,3.571-14.935,9.228l-33.391,66.783 c-1.152,2.321-1.761,4.875-1.761,7.467v378.435c0,27.656,22.387,50.087,50.087,50.087C489.578,512,512,489.613,512,461.913V83.478 C512,80.886,511.391,78.332,510.239,76.011z M478.609,461.913c0,21.835-33.391,21.979-33.391,0v-16.696h33.391V461.913z M478.609,100.174h-33.391V87.418l16.696-33.391l16.696,33.391V100.174z"></path> </g> </g> <g> <g> <path d="M361.739,0H16.696C7.479,0,0,7.473,0,16.696v478.609C0,504.527,7.479,512,16.696,512h345.043 c9.217,0,16.696-7.473,16.696-16.696V16.696C378.435,7.473,370.956,0,361.739,0z M150.261,66.783h77.913 c9.217,0,16.696,7.473,16.696,16.696s-7.479,16.696-16.696,16.696h-77.913c-9.217,0-16.696-7.473-16.696-16.696 S141.044,66.783,150.261,66.783z M294.957,434.087H83.478c-9.217,0-16.696-7.473-16.696-16.696 c0-9.223,7.479-16.696,16.696-16.696h211.478c9.217,0,16.696,7.473,16.696,16.696 C311.652,426.614,304.174,434.087,294.957,434.087z M66.783,350.609c0-9.223,7.479-16.696,16.696-16.696h100.174 c9.217,0,16.696,7.473,16.696,16.696c0,9.223-7.479,16.696-16.696,16.696H83.478C74.261,367.304,66.783,359.831,66.783,350.609z M294.957,367.304h-44.522c-9.217,0-16.696-7.473-16.696-16.696c0-9.223,7.479-16.696,16.696-16.696h44.522 c9.217,0,16.696,7.473,16.696,16.696C311.652,359.831,304.174,367.304,294.957,367.304z M294.957,300.522H83.478 c-9.217,0-16.696-7.473-16.696-16.696c0-9.223,7.479-16.696,16.696-16.696h211.478c9.217,0,16.696,7.473,16.696,16.696 C311.652,293.049,304.174,300.522,294.957,300.522z M66.783,217.043c0-9.223,7.479-16.696,16.696-16.696h66.783 c9.217,0,16.696,7.473,16.696,16.696c0,9.223-7.479,16.696-16.696,16.696H83.478C74.261,233.739,66.783,226.266,66.783,217.043z M294.957,233.739h-77.913c-9.217,0-16.696-7.473-16.696-16.696c0-9.223,7.479-16.696,16.696-16.696h77.913 c9.217,0,16.696,7.473,16.696,16.696C311.652,226.266,304.174,233.739,294.957,233.739z M294.957,166.957H83.478 c-9.217,0-16.696-7.473-16.696-16.696s7.479-16.696,16.696-16.696h211.478c9.217,0,16.696,7.473,16.696,16.696 C311.652,159.484,304.174,166.957,294.957,166.957z"></path> </g> </g> </g></svg>
                        </MudPaper>
                    </MudItem>

                    <MudItem xs="9" Style="text-align:  center">
                        <MudText Style="font-size: 18px; font-weight: bold">Tổng số bài thi</MudText>
                        <MudText Style="font-size: 20px; font-weight: bold">1000</MudText>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>

        <MudItem xl="3" xs="12" sm="6" md="6" lg="3" Style="padding: 10px 0 0 24px">
            <MudPaper Style="background-color: #FBEDD9; padding: 20px; box-shadow: none">
                <MudGrid>
                    <MudItem xs="3">
                        <MudPaper Style="background-color: #FFA427; box-shadow: none; padding: 10px; display: flex; justify-content: center; align-items: center">
                            <svg width="35px" height="35px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#fff"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M905.92 237.76a32 32 0 0 0-52.48 36.48A416 416 0 1 1 96 512a418.56 418.56 0 0 1 297.28-398.72 32 32 0 1 0-18.24-61.44A480 480 0 1 0 992 512a477.12 477.12 0 0 0-86.08-274.24z" fill="#ffffff"></path><path d="M630.72 113.28A413.76 413.76 0 0 1 768 185.28a32 32 0 0 0 39.68-50.24 476.8 476.8 0 0 0-160-83.2 32 32 0 0 0-18.24 61.44zM489.28 86.72a36.8 36.8 0 0 0 10.56 6.72 30.08 30.08 0 0 0 24.32 0 37.12 37.12 0 0 0 10.56-6.72A32 32 0 0 0 544 64a33.6 33.6 0 0 0-9.28-22.72A32 32 0 0 0 505.6 32a20.8 20.8 0 0 0-5.76 1.92 23.68 23.68 0 0 0-5.76 2.88l-4.8 3.84a32 32 0 0 0-6.72 10.56A32 32 0 0 0 480 64a32 32 0 0 0 2.56 12.16 37.12 37.12 0 0 0 6.72 10.56zM355.84 313.6a36.8 36.8 0 0 0-13.12 18.56l-107.52 312.96a37.44 37.44 0 0 0 2.56 35.52 32 32 0 0 0 24.96 10.56 27.84 27.84 0 0 0 17.28-5.76 43.84 43.84 0 0 0 10.56-13.44 100.16 100.16 0 0 0 7.04-15.36l4.8-12.8 17.6-49.92h118.72l24.96 69.76a45.76 45.76 0 0 0 10.88 19.2 28.8 28.8 0 0 0 20.48 8.32h2.24a27.52 27.52 0 0 0 27.84-15.68 41.28 41.28 0 0 0 0-29.44l-107.84-313.6a36.8 36.8 0 0 0-13.44-19.2 44.16 44.16 0 0 0-48 0.32z m24.32 96l41.6 125.44h-83.2zM594.88 544a66.56 66.56 0 0 0 25.6 4.16h62.4v78.72a29.12 29.12 0 0 0 32 32 26.24 26.24 0 0 0 27.2-16.32 73.28 73.28 0 0 0 4.16-26.24v-66.88h73.6a27.84 27.84 0 0 0 29.44-32 26.56 26.56 0 0 0-16-27.2 64 64 0 0 0-23.04-4.16h-64v-75.84a28.16 28.16 0 0 0-32-30.08 26.56 26.56 0 0 0-27.2 15.68 64 64 0 0 0-4.16 24v66.88h-62.72a69.44 69.44 0 0 0-25.6 4.16 26.56 26.56 0 0 0-15.68 27.2 25.92 25.92 0 0 0 16 25.92z" fill="#ffffff"></path></g></svg>
                        </MudPaper>
                    </MudItem>

                    <MudItem xs="9" Style="text-align:  center">
                        <MudText Style="font-size: 18px; font-weight: bold">Tỉ lệ trên 5 điểm</MudText>
                        <MudText Style="font-size: 20px; font-weight: bold">1000</MudText>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>

    <MudCarousel Class="mud-width-full" Style="height:700px;" EnableSwipeGesture="@enableSwipeGesture" ShowBullets="@bullets" ShowArrows="@arrows" AutoCycle="@autocycle" TData="object">

        <MudCarouselItem Transition="transition">

            <MudPaper Style="padding: 15px; margin-top: 2rem">
                <MudGrid Style="align-items: center">
                    <MudItem xl="4" lg="4" md="4" sm="6" xs="12">
                        <MudText Style="font-size: 16px; font-weight: bold">Phổ điểm</MudText>
                    </MudItem>
                </MudGrid>
                <MudGrid Style="margin-top: 2rem; align-items: center">
                    @if (isLoading)
                    {
                        <Testify.Web.Shared.LoadingContext />
                    }
                    else
                    {

                        <MudItem xl="7" lg="7" md="12" sm="12" xs="12">
                            <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" ChartOptions="@ChartOption" XAxisLabels="@_arrScore" Width="100%" Height="450px" @bind-SelectedIndex="indexChooseBar"></MudChart>
                        </MudItem>
                        <MudItem xl="5" lg="5" md="12" sm="12" xs="12">
                            <MudChart ChartType="ChartType.Donut" Width="400px" Height="400px" InputData="@_lstDataDonutCharts.ToArray()" InputLabels="@LabelDonutCharts" @bind-SelectedIndex="indexChooseDonut">
                                <CustomGraphics>
                                    <text class="donut-inner-text" x="50%" y="45%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">@(indexChooseDonut == 0 ? "Đạt" : "Trượt")</text>
                                    <text class="donut-inner-text" x="50%" y="55%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">@Math.Round(_lstDataDonutCharts[indexChooseDonut], 2)%</text>
                                </CustomGraphics>
                            </MudChart>

                        </MudItem>
                    }
                </MudGrid>
            </MudPaper>
        </MudCarouselItem>


        <MudCarouselItem Transition="transition">
            <MudPaper Style="padding: 15px; margin-top: 2rem">
                <MudGrid Style="align-items: center">
                    <MudItem xl="3" lg="3" md="3" sm="6" xs="12">
                        <MudText Style="font-size: 16px; font-weight: bold">Phổ điểm</MudText>
                    </MudItem>
                    <MudItem xl="3" lg="3" md="3" sm="6" xs="12">

                        <MudSelect T="int" @bind-Value="subjectId" Variant="Variant.Outlined" SelectedValuesChanged="ChangeValueSubject">
                            @foreach (var item in _lstSubject)
                            {
                                <MudSelectItem Value="item.Id">@item.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xl="3" lg="3" md="3" sm="6" xs="12">
                        @if (_lstExam.Count == 0)
                        {
                            <MudSelect T="string" Variant="Variant.Outlined" Text="Không có bài thi nào">                
                                
                            </MudSelect>
                        }
                        else
                        {
                            <MudSelect T="int" @bind-Value="examId" Variant="Variant.Outlined" SelectedValuesChanged="ChangeValueExam">
                                @foreach (var item in _lstExam)
                                {
                                    <MudSelectItem Value="item.Id">@item.Name</MudSelectItem>
                                }
                            </MudSelect>
                        }

                    </MudItem>

                </MudGrid>
                <MudGrid Style="margin-top: 2rem; align-items: center">
                    @if (isLoading)
                    {
                        <Testify.Web.Shared.LoadingContext />
                    }
                    else
                    {
                        if (isError)
                        {
                            <MudItem xl="12" lg="12" md="12" sm="12" xs="12" >
                                <MudText Class="text-center">Không có dữ liệu</MudText>
                            </MudItem>
                        }
                        else
                        {
                            <MudItem xl="7" lg="7" md="12" sm="12" xs="12">
                                <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" ChartOptions="@ChartOption" XAxisLabels="@_arrScore" Width="100%" Height="450px" @bind-SelectedIndex="indexChooseBar"></MudChart>
                            </MudItem>
                            <MudItem xl="5" lg="5" md="12" sm="12" xs="12">
                                <MudChart ChartType="ChartType.Donut" Width="400px" Height="400px" InputData="@_lstDataDonutCharts.ToArray()" InputLabels="@LabelDonutCharts" @bind-SelectedIndex="indexChooseDonut">
                                    <CustomGraphics>
                                        <text class="donut-inner-text" x="50%" y="45%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">@(indexChooseDonut == 0 ? "Đạt" : "Trượt")</text>
                                        <text class="donut-inner-text" x="50%" y="55%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">@Math.Round(_lstDataDonutCharts[indexChooseDonut], 2)%</text>
                                    </CustomGraphics>
                                </MudChart>

                            </MudItem>
                        }
                    }
                </MudGrid>
            </MudPaper>
        </MudCarouselItem>
    </MudCarousel>

    <MudGrid Style="margin-top: 2rem">
        <MudItem xl="12" lg="12" md="12" sm="12" xs="12">
            <MudTable Items="_lstUser" Dense="true" Hover="true" Virtualize="true" FixedHeader="true" HorizontalScrollbar="true" Height="300px">
                <ToolBarContent>
                    <MudText Style="font-size: 16px; font-weight: bold">Lớp học</MudText>
                    <MudSpacer />
                    <MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Họ tên</MudTh>
                    <MudTh>Ngày sinh</MudTh>
                    <MudTh>Số điện thoại</MudTh>
                    <MudTh>Lớp</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Họ tên">@context.FullName</MudTd>
                    <MudTd DataLabel="Họ tên">@context.Address</MudTd>
                    <MudTd DataLabel="Họ tên">@context.Email</MudTd>
                    <MudTd DataLabel="Ngày sinh">@context.DateOfBirth</MudTd>
                    <MudTd DataLabel="Số điện thoại">@context.PhoneNumber</MudTd>
                </RowTemplate>
            </MudTable>
        </MudItem>
    </MudGrid>
</div>

@code {

    private List<User> _lstUser { get; set; }
    private List<Subject> _lstSubject = new List<Subject>();
    private List<Exam> _lstExam = new List<Exam>();
    private List<ClassWithUser> _lstClass;
    private int subjectId;
    private int examId;
    private ClassWithUser classId;
    private bool isError = false;
    private List<ScoreStatistics> _lstScore = new List<ScoreStatistics>();
    private string text;

    private List<User> _lstSV = new List<User>();

    //Carousel
    private bool autocycle = false;
    private bool arrows = true;
    private Transition transition = Transition.Slide;
    private bool bullets = false;
    private bool enableSwipeGesture = true;



    private string[] _arrScore;
    private List<double> _lstDataBarCharts = new List<double>();
    private List<double> _lstDataDonutCharts = new List<double>();
    private string[] LabelDonutCharts = { "Phần trăm đạt", "Phần trăm trượt" };


    public List<ChartSeries> Series;
    public ChartOptions ChartOption { get; set; } = new ChartOptions();

    private int select = -1;
    private bool isLoading = true;
    private int totalStudent = 0;

    private int indexChooseDonut = 0;
    private int indexChooseBar = -1;

    private async Task LoadDataChart()
    {
        _lstDataBarCharts.Clear();
        _lstDataDonutCharts.Clear();

        _arrScore = _lstScore.Select(x => x.Score.ToString()).OrderBy(x => x).Distinct().ToArray();


        double isPass = _lstScore.Count(x => x.Score >= 5);
        double isFail = _lstScore.Count(x => x.Score < 5);
        double percenIsPass = (isPass / _lstScore.Count) * 100;
        double percenIsFail = ((_lstScore.Count - isPass) / _lstScore.Count) * 100;


        _lstDataDonutCharts.Add(percenIsPass);
        _lstDataDonutCharts.Add(percenIsFail);

        foreach (var score in _arrScore)
        {
            int count = 0;
            foreach (var item in _lstScore)
            {
                if (score == item.Score.ToString())
                {
                    count++;
                }
            }

            _lstDataBarCharts.Add(count);
        }

        Series = new List<ChartSeries>()
        {
            new ChartSeries() {Name = "Tổng số bài thi đạt điểm tương ứng", Data = _lstDataBarCharts.ToArray() },
        };

        ChartOption = new ChartOptions()
            {
                YAxisTicks = 1
            };

        isLoading = false;
    }

    private async Task ChangeValueSubject()
    {
        _lstExam = await _serExam.GetListOfSubject(subjectId);
        if (_lstExam != null && _lstExam.Count > 0)
        {
            examId = _lstExam[0].Id;
            _lstScore = await _serLec.GetScore(subjectId, examId);
            await LoadDataChart();
            isError = false;
        }
        else
        {
            isError = true;
        }      
    }

    private async Task ChangeValueExam()
    {
        _lstScore = await _serLec.GetScore(subjectId, examId);
        await LoadDataChart();

    }


    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            return;
        }
    }


    protected override async Task OnInitializedAsync()
    {

        _lstSV = await _serLec.GetAllStudent();
        _lstSubject = await _serSub.GetAllSub("", true);
        _lstClass = await _serClass.GetAllClass("", true);
        _lstUser = await _serLec.GetAllTeacher();
        if (_lstSV.Count != 0 && _lstSubject.Count != 0 && _lstClass.Count != 0 && _lstUser.Count != 0)
        {
            if (_lstSubject.Any())
            {

                classId = _lstClass[0];
                subjectId = _lstSubject[1].Id;
                _lstExam = await _serExam.GetListOfSubject(subjectId);
                if (_lstExam != null && _lstExam.Count > 0)
                {
                    examId = _lstExam[0].Id;
                    _lstScore = await _serLec.GetScore(subjectId, examId);
                }
                else
                {
                    isError = true;
                }

            }


            totalStudent = _lstSV.Count();
        }

        await LoadDataChart();
    }

    Margin _margin;
    bool _placeholder;
    bool _clearable = true;

    private async Task<IEnumerable<Exam>> SearchExam(string value, CancellationToken token)
    {
        if (string.IsNullOrEmpty(value))
            return _lstExam;

        return _lstExam.Where(x => x.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }


    private async Task<IEnumerable<ClassWithUser>> SearchClass(string value, CancellationToken token)
    {
        if (string.IsNullOrEmpty(value))
            return _lstClass;

        return _lstClass.Where(x => x.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    private async Task<IEnumerable<Subject>> SearchSubject(string value, CancellationToken token)
    {
        if (string.IsNullOrEmpty(value))
            return _lstSubject;

        return _lstSubject.Where(x => x.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

}
