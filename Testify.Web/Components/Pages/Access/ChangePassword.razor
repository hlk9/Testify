@page "/ChangePassword"

@if (isLoading)
{
    <MudPaper Style="width: 100%; height: calc(100vh - 64px); display: flex; justify-content: center; align-items: center; background-color: rgba(0, 0, 0, 0.5)">
        <Testify.Web.Shared.LoadingContext />
    </MudPaper>
}
else
{
    <MudDialog>
        <DialogContent>
            <MudPaper Elevation="0" Class="w-100 h-100 d-flex justify-content-center align-items-center">
                <MudPaper Style="width: 50svh">
                    <MudPaper Elevation="0" Class="bg-transparent w-100 text-center">
                        <MudText Class="fs-1 fw-bold mt-3">Đặt lại mật khẩu mới</MudText>
                    </MudPaper>

                    <MudPaper Elevation="0" Class="bg-transparent w-100 mt-5">
                        <MudTextField T="string" Class="mt-3 mb-3" @bind-Value="@passwordNew" Placeholder="Nhập mật khẩu..." Variant="Variant.Outlined" InputType="@PasswordInputPassword" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIconPassword" OnAdornmentClick="@(() =>ButtonTestclick(true))" AdornmentAriaLabel="Show Password" FullWidth="true"></MudTextField>
                        <MudTextField T="string" Class="mt-3 mb-3" @bind-Value="@resetPass" Placeholder="Nhập lại mật khẩu..." Variant="Variant.Outlined" InputType="@PasswordInputResetPassword" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIconResetPassword" OnAdornmentClick="@(() => ButtonTestclick(false))" AdornmentAriaLabel="Show Password" FullWidth="true"></MudTextField>
                    </MudPaper>

                    <MudPaper Elevation="0" Class="bg-transparent w-100 mt-5">
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" Class="w-100 py-2" Style="border-radius: 15px" OnClick="OnSubmit">Xác nhận</MudButton>
                    </MudPaper>
                </MudPaper>
            </MudPaper>
        </DialogContent>
    </MudDialog>
}

@code {
    private string passwordNew = "";
    private string resetPass = "";
    private bool isLoading = false;
    private bool isShowPassword;
    private bool isShowResetPassword;

    InputType PasswordInputPassword = InputType.Password;
    InputType PasswordInputResetPassword = InputType.Password;
    string PasswordInputIconPassword = Icons.Material.Filled.VisibilityOff;
    string PasswordInputIconResetPassword = Icons.Material.Filled.VisibilityOff;

    [Parameter]
    public Guid _UserId { get; set; }

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    void ButtonTestclick(bool isInput)
    {
        if (isInput)
        {
            if (isShowPassword)
            {
                isShowPassword = false;
                PasswordInputIconPassword = Icons.Material.Filled.VisibilityOff;
                PasswordInputPassword = InputType.Password;
            }
            else
            {
                isShowPassword = true;
                PasswordInputIconPassword = Icons.Material.Filled.Visibility;
                PasswordInputPassword = InputType.Text;
            }
        }
        else
        {
            if (isShowResetPassword)
            {
                isShowResetPassword = false;
                PasswordInputIconResetPassword = Icons.Material.Filled.VisibilityOff;
                PasswordInputResetPassword = InputType.Password;
            }
            else
            {
                isShowResetPassword = true;
                PasswordInputIconResetPassword = Icons.Material.Filled.Visibility;
                PasswordInputResetPassword = InputType.Text;
            }
        }
    }

    private async Task OnSubmit()
    {
        try
        {
            if (passwordNew.Trim() == "" || passwordNew.Trim().Length == 0)
            {
                snackbar.Add("Chưa nhập ô nhập mật khẩu", Severity.Warning);
                return;
            }

            if (resetPass.Trim() == "" || resetPass.Trim().Length == 0)
            {
                snackbar.Add("Chưa nhập ô nhập lại mật khẩu", Severity.Warning);
                return;
            }

            if (passwordNew.Trim() != resetPass.Trim())
            {
                snackbar.Add("Mật khẩu và ô nhập lại mật khẩu không trùng khớp", Severity.Warning);
                return;
            }

            isLoading = true;
            StateHasChanged();
            var objUser = await _serLec.GetLecturerById(_UserId);
            var passwordHash = _serviceAccess.HashPassword(resetPass);

            if (objUser != null)
            {
                objUser.LastLogin = DateTime.Now;
                objUser.PasswordHash = passwordHash;

                var confirm = await _serLec.UpdateForgotPass(objUser);

                if (confirm != null)
                {
                    snackbar.Add("Cập nhật mật khẩu thành công!", Severity.Success);
                    MudDialog.Close(DialogResult.Ok(true));
                }
            }
        }
        catch {}
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}
