@inherits LayoutComponentBase

@inject NavigationManager NavigationManager

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudDrawer @bind-Open="@_open" ClipMode="_clipMode" Elevation="1" Variant="@DrawerVariant.Responsive">
        <NavAdmin></NavAdmin>
    </MudDrawer>
    <MudMainContent>
        <MudAppBar Style="box-shadow: 1px 1px #d9d9d9; background-color: transparent" Dense="@_dense">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
            <MudSpacer />
            <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
            <MudMenu>
                <ActivatorContent>
                    <MudAvatar Color="Color.Tertiary">L</MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Thông tin cá nhân</MudMenuItem>
                    <MudMenuItem>Đăng xuất</MudMenuItem>

                </ChildContent>
            </MudMenu>
        </MudAppBar>
        <div>
            @Body
        </div>
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
    Đã có lỗi sảy ra
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _isDarkMode = false;
    private bool _open = false;
    private bool _dense = false;
    private MudTheme? _theme = null;
    private DrawerClipMode _clipMode = DrawerClipMode.Never;

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
            {
                PaletteLight = _lightPalette,
                PaletteDark = _darkPalette,
                LayoutProperties = new LayoutProperties()
            };
    }

    private readonly PaletteLight _lightPalette = new()
        {
            Primary = "#29A69A",
            Black = "#110e2d",
            AppbarText = "#424242",
            AppbarBackground = "rgba(255,255,255,0.8)",
            DrawerBackground = "#ffffff",
            GrayLight = "#e8e8e8",
            GrayLighter = "#f9f9f9",
        };

    private void GoToRegister()
    {
        NavigationManager.NavigateTo("/RegisterSelector");
    }

    private readonly PaletteDark _darkPalette = new()
        {
            Primary = "#7e6fff",
            Surface = "#1e1e2d",
            Background = "#1a1a27",
            BackgroundGray = "#151521",
            AppbarText = "#92929f",
            AppbarBackground = "rgba(26,26,39,0.8)",
            DrawerBackground = "#1a1a27",
            ActionDefault = "#74718e",
            ActionDisabled = "#9999994d",
            ActionDisabledBackground = "#605f6d4d",
            TextPrimary = "#b2b0bf",
            TextSecondary = "#92929f",
            TextDisabled = "#ffffff33",
            DrawerIcon = "#92929f",
            DrawerText = "#92929f",
            GrayLight = "#2a2833",
            GrayLighter = "#1e1e2d",
            Info = "#4a86ff",
            Success = "#3dcb6c",
            Warning = "#ffb545",
            Error = "#ff3f5f",
            LinesDefault = "#33323e",
            TableLines = "#33323e",
            Divider = "#292838",
            OverlayLight = "#1e1e2d80",
        };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}

